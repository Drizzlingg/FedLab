# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SMILE Lab
# This file is distributed under the same license as the FedLab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FedLab \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 20:27+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/tutorials/tutorial_1.rst:5 d88ab6db2cbb4fdfb4817454b9233ee4
msgid "Distributed Communication"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:9 ddec08f4e4eb4a10a8187908ceba4dd0
msgid "How to initialize distributed network?"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:11 f21ddfd73cec4b4f9f717861464a1683
msgid ""
"FedLab uses `torch.distributed "
"<https://pytorch.org/docs/stable/distributed.html>`_ as point-to-point "
"communication package. The communication backend is Gloo as default. "
"FedLab processes send/receive data through TCP network connection. If the"
" automatically detected interface is not correct, you need to choose the "
"network interface to use for Gloo, by setting the environment variables "
"``GLOO_SOCKET_IFNAME``, for example ``export GLOO_SOCKET_IFNAME=eth0`` or"
" ``os.environ['GLOO_SOCKET_IFNAME'] = \"eth0\"``."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:15 68a03cc92b1249909db34a21390101ef
msgid "Check the available ethernet:"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:21 92a8b6d0ca974981960bf8b914a18be2
msgid ""
"You need to assign right ethernet to :class:`DistNetwork`, making sure "
"``torch.distributed`` network initialization works. :class:`DistNetwork` "
"is for quickly network configuration, which you can create one as "
"follows:"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:36 07ba4a8b5eb3417786d5358cfbf81334
msgid ""
"The ``(server_ip, server_port)`` is the address of server. please be "
"aware of that the rank of server is 0 as default."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:37 ec5b91f26ece402481b43c1026b8b6d9
msgid "Make sure ``world_size`` is the same across process."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:38 7ea32249d41b4c9ab025c13a38d0ad65
msgid "Rank should be different (from ``0`` to ``world_size-1``)."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:39 455d919f87634e6a86bb9a5ae3aed7fc
msgid "world_size = 1 (server) + client number."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:40 93ebf05d611e423e82782be5bc9c103d
msgid ""
"The ethernet can be None, torch.distributed will try to find the right "
"ethernet. If it doesn't work, user need to assign right ethernet name."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:41 219b1cc4351a4985951661a3249ceaeb
msgid ""
"The ``ethernet_name`` must be checked (using ``ifconfig``). Otherwise, "
"network initialization would fail."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:45 65cfaa609bba4e56bfa79efdab31d684
msgid "How to create package?"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:47 32441f7fa86741179ae80abf9652982e
msgid ""
"The communication module of FedLab is in core/communicator. "
"core.communicator.Package defines the basic data structure of network "
"package. In our implementation, Package contains Header and Content."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:55 bf93b39191664015a902a86cd0ab302e
msgid "Currently, you can create a network package from following methods:"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:60 1eb89fce153f41059e65327f945e38b5
msgid "Currently, following restrictions need to be noticedï¼š"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:60 eec2a387905642f2a785a6dd1014924a
msgid ""
"**Tensor shape:** **FedLab** only supports vectorized tensors as content,"
" which means that tensors with different shape should be flatterned "
"before appended into Package (call tensor.view(-1))."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:61 6f8c567cef8947d8ad3b05022fa9ea5e
msgid ""
"**Data type:** Package doesn't accept tensors of different data type. In "
"other words, **FedLab** force all appended tensors to be the same data "
"type as the first appended tensor. Torch data types like **[torch.int8, "
"torch.int16, torch.int32, torch.int64, torch.float16, torch.float32, "
"torch.float64]** are supported."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:63 5b9b9297267c4f49900e4246f2fb7836
msgid "initialize with tensor"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:70 87978c8e44124fe2bb1b11137da079ad
msgid "initialize with tensor list"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:78 1ab3dd2657fa40018f25788d208b2348
msgid "append a tensor to exist package"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:88 6c7eec79bf14480ebec7f1363756a65b
msgid "append a tensor list to exist package"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:98 49a97083b71143e6b0f07c57fff638f5
msgid "Two static methods are provided by Package to parse header and content:"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:107 aab3a9bac1284c3a99bcccb00e725d0d
msgid "How to send package?"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:109 a8f3b2c641864521b08322c5ab687b11
msgid ""
"The point-to-point communicating agreements is implemented in "
"PackageProcessor module. PackageProcessor is a static class to manage "
"package sending/receiving procedure."
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:111 2d50619a84114deebed781fba65f8e40
msgid ""
"User can send a package to a process with rank=0 (the parameter dst must "
"be assigned):"
msgstr ""

#: ../../source/tutorials/tutorial_1.rst:118 ef7cc126128a4006af560c4aa9b43e75
msgid ""
"or, receive a package from rank=0 (set the parameter src=None to receive "
"package from any other process):"
msgstr ""

